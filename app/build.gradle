apply plugin: 'com.android.application'

def AAVersion = '4.5.0'

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    // Deprecated
    //implementation files('libs/signalr-client-sdk.jar')
    //implementation files('libs/signalr-client-sdk-android.jar')
    implementation 'com.microsoft.signalr:signalr:1.0.0'
    implementation 'org.slf4j:slf4j-jdk14:1.7.25'
    annotationProcessor "org.androidannotations:androidannotations:$AAVersion"
    implementation "org.androidannotations:androidannotations-api:$AAVersion"
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'com.squareup.retrofit2:converter-gson:2.1.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.4.1'
    implementation 'com.google.android.gms:play-services-location:16.0.0'
    implementation 'com.google.android.gms:play-services-maps:16.0.0'
    implementation 'com.android.support:appcompat-v7:27.0.2'
    implementation 'com.android.support:design:27.0.2'
    implementation 'com.annimon:stream:1.1.9'
    implementation 'com.daasuu:BubbleLayout:1.2.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.microsoft.azure.android:azure-storage-android:2.0.0@aar'
    //implementation 'com.facebook.android:facebook-login:4.40.0'
    implementation 'com.facebook.android:facebook-android-sdk:4.40.0'
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:1.10.19'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}

allprojects {
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
        }
    }
}

android {
    compileSdkVersion 27
    aaptOptions.cruncherEnabled = false
    aaptOptions.useNewCruncher = false
//    useLibrary 'org.apache.http.legacy'
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        //abortOnError false
    }
    defaultConfig {
        applicationId "com.mosy.kalin.mosy"
        versionName '0.6.6'
        versionCode 19
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        targetSdkVersion 27
        minSdkVersion 21
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ['resourcePackageName': android.defaultConfig.applicationId]
            }
        }
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

        }

    }
    splits {
        abi {
            enable true
            reset()
            include 'x86', 'armeabi-v7a'
            universalApk true
        }
    }
    packagingOptions {
        exclude 'lib/getLibs.ps1'
        exclude 'lib/getLibs.sh'
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
    productFlavors {
    }
}

android.applicationVariants.all {
    variant ->
        variant.variantData.variantConfiguration.javaCompileOptions.annotationProcessorOptions.arguments =
                [
                        'androidManifestFile': variant.outputs[0]?.processResources?.manifestFile?.absolutePath,
                        'resourcePackageName': android.defaultConfig.applicationId
                ]
}

configurations { all*.exclude group: 'com.android.support', module: 'support-v4' }
